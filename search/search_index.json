{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Asterisk Engine Documentation","text":"<p>Welcome to the Asterisk Engine Manual. Here you'll find comprehensive documentation on developing games in C# with Asterisk Engine\u2014a powerful, open-source game engine built for rapid and efficient game creation. This manual includes guides, tutorials, and reference materials to help you get started, understand core concepts, and explore advanced features. Whether you're new to game development or an experienced developer, you'll find step-by-step instructions, code examples, and best practices to support your workflow and bring your game ideas to life.</p>"},{"location":"CODE_OF_CONDUCT.html","title":"Contributor Covenant Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT.html#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders of the AsteriskEngine project pledge to make participation in our game engine and its community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"CODE_OF_CONDUCT.html#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for game engine development include:</p> <ul> <li>Using welcoming and inclusive language in code, documentation, and discussions</li> <li>Respecting differing viewpoints and experiences, especially regarding game development tools, workflows, and design decisions</li> <li>Gracefully accepting constructive criticism about code, features, or documentation</li> <li>Offering help and guidance to new contributors and users</li> <li>Showing empathy towards other community members, whether they are programmers, artists, designers, or users</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances in any project space (including code comments, documentation, and communication channels)</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks, especially regarding someone's contributions or technical choices</li> <li>Public or private harassment, including persistent unwanted contact or attention</li> <li>Publishing others\u2019 private information, such as real names or contact details, without explicit permission</li> <li>Dismissing or belittling others\u2019 work or ideas</li> </ul>"},{"location":"CODE_OF_CONDUCT.html#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct.</p>"},{"location":"CODE_OF_CONDUCT.html#scope","title":"Scope","text":"<p>This Code of Conduct applies within all project spaces, including the code repository, issue tracker, forums, chat channels, and in public spaces when an individual is representing the project or its community.</p>"},{"location":"CODE_OF_CONDUCT.html#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [INSERT EMAIL ADDRESS]. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident.</p>"},{"location":"CODE_OF_CONDUCT.html#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html</p>"},{"location":"about.html","title":"About Ametrine","text":"<p>Ametrine is a software company dedicated to building powerful and accessible tools for game developers. Our flagship product is a modern game engine based on raylib and developed in C#, designed to streamline the game creation process for both beginners and professionals.</p>"},{"location":"about.html#our-mission","title":"Our Mission","text":"<p>We aim to empower creators by providing a robust, open, and easy-to-use engine that leverages the flexibility of C# and the performance of raylib.</p>"},{"location":"about.html#the-team","title":"The Team","text":"<p>Ametrine was founded and is primarily developed by Noticxs, who is passionate about open-source technology and game development.</p>"},{"location":"about.html#why-choose-our-engine","title":"Why Choose Our Engine?","text":"<ul> <li>C# Powered: Modern, high-level language support.</li> <li>Raylib Foundation: Built on a proven, lightweight graphics library.</li> <li>Open and Accessible: Designed for everyone, from hobbyists to studios.</li> </ul> <p>For more information, updates, and documentation, stay tuned!</p>"},{"location":"cheatsheet.html","title":"The Asterisk Engine Official Cheetsheet","text":"<p>Enjoy the free cheetsheet to make your programming much easier, writting all this was not fun.</p>"},{"location":"cheatsheet.html#window-management","title":"Window Management","text":"<ul> <li>stuff</li> </ul>"},{"location":"cheatsheet.html#input-handling","title":"Input Handling","text":"<ul> <li>stuff</li> </ul>"},{"location":"cheatsheet.html#audio-managment","title":"Audio Managment","text":"<ul> <li>stuff</li> </ul>"},{"location":"cheatsheet.html#sprite-rendering","title":"Sprite Rendering","text":"<ul> <li>stuff</li> </ul>"},{"location":"cheatsheet.html#shape-rendering","title":"Shape Rendering","text":"<ul> <li>stuff</li> </ul>"},{"location":"cheatsheet.html#text-rendering","title":"Text Rendering","text":"<ul> <li>stuff</li> </ul>"},{"location":"contribution.html","title":"Our Contributors","text":"<p>So far we only have our CEO, @Noticxs 'Terrel McKenzie' working on the development of this engine alone. But we are open to more developers comming onboard the team to help make Asterisk Engine the best game engine for beginners and experienced developers.</p>"},{"location":"contribution.html#contribution","title":"Contribution","text":"<p>Thank you for helping improve AsteriskEngine! Your contributions make this project better.</p>"},{"location":"contribution.html#how-to-contribute","title":"How to Contribute","text":"<ul> <li>Join the community Discord Server to learn about new updates</li> <li>Fork the repository</li> <li>Create a new branch (<code>git checkout -b feature/your-feature</code>)</li> <li>Commit your changes (<code>git commit -am 'Add new feature'</code>)</li> <li>Push to the branch (<code>git push origin feature/your-feature</code>)</li> <li>Open a Pull Request</li> </ul>"},{"location":"contribution.html#contributor-guidelines","title":"Contributor Guidelines","text":"<ul> <li>Follow the Code of Conduct</li> <li>Write clear, concise commit messages</li> <li>Add tests for new features or bug fixes</li> <li>Update documentation as needed</li> </ul>"},{"location":"contribution.html#acknowledgements","title":"Acknowledgements","text":"<p>We appreciate all contributors! Check the GitHub contributors page for a full list.</p> <p>Thank you for your support!</p>"},{"location":"controlling_audio.html","title":"Controlling audio","text":"<p>This page will show you all the ways you can control audio in Asterisk Engine.</p> <p>Raylib provides a simple API for controlling audio. Here are some common controls:</p> <ul> <li> <p><code>Game.LoadAudio(soundfile);</code></p> </li> <li> <p><code>Game.PlayAudio();</code></p> </li> <li> <p><code>Game.StopAudio();</code></p> </li> <li> <p><code>Game.UnloadAudio();</code></p> </li> <li> <p><code>Game.PauseAudio()</code></p> </li> </ul>"},{"location":"creating_a_window.html","title":"Creating a window","text":"<p>Making a window in Asterisk Engine is a little different from making one in other game frameworks such as Pygame or Raylib.</p> <p>To make a window follow this written example:</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n});\n</code></pre> <p>The following script shows you how to make a window in Asterisk Engine. Lets go through it line by line.</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n</code></pre> <p>These are importing Asterisk Engine and Raylib, Raylib is imported for any other things you want to use the original engine for if not incorperated into Asterisk Engine or your prefer the native method.</p> <pre><code>int WindowWidth = 600;\nint WindowHeight = 600;\n</code></pre> <p>These are global values declaring the width and height the window should be set at.</p> <pre><code>Game.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt; {\n  // More in the next bit\n});\n</code></pre> <p>This tells the engine the window should be made.</p> <ol> <li>Fist declaring the title. \"Test Game\".</li> <li>Then declaring the width and height of the window. \"WindowWidth, WindowHeight\".</li> <li>Finally () which replaces \"Action Draw\" which allows you to define things to be drawn to the screen as soon as the window is created.</li> </ol> <pre><code>  Game.ClearBackground(\"Black\");\n  Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n});\n</code></pre> <p>Next this part of the script does the following.</p> <ol> <li>\"ClearBackground\" - Sets the background to whatever color specified (e.g: \"Black\" in this context).</li> <li>\"DrawFPS\" - Draws the FPS that your window is running at to the window. In this context it draws it to the top right corner of the window this is done like this \"WindowWidth - 100\". Finally DrawFPS \"10\", relates to the font color and \"White\" is the color of the text.</li> </ol> <p>In the next part of the manual you will be shown how to draw shapes to your window.</p>"},{"location":"drawing_your_first_animated_sprite.html","title":"Drawing animated sprites on your window","text":"<p>This is a new example without the shapes from last example, but  still usues the original as a base.</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nstring cowsprite = \"cow.png\";\nint cowX = 100;\nint cowY = 100;\n\nint frameWidth = 32;\nint frameHeight = 32;\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n    Game.DrawAnimatedSprite(cowsprite, cowX, cowY, \"White\", frameWidth, frameHeight, 5, scale: 10f, framesPerCycle: 60);\n});\n</code></pre> <p>The new bits of code are explained below as before.</p> <pre><code>string cowsprite = \"cow.png\";\nint cowX = 100;\nint cowY = 100;\n\nint frameWidth = 32;\nint frameHeight = 32;\n</code></pre> <p>The cowsprites file path and x/y positions are specified to be used later on. In Asterisk Engine you have specify the frame width and height to allow the frame to render properly, when specifying frame width and height this goes of the size of each frame in your spritesheet which is what Asterisk Engine uses to make the animation.</p> <pre><code>Game.DrawAnimatedSprite(cowsprite, cowX, cowY, \"White\", frameWidth, frameHeight, 5, scale: 10f, framesPerCycle: 60);\n</code></pre> <p>This line draws an animated sprite on the window. Here\u2019s what each parameter means:</p> <ul> <li><code>cowsprite</code>: The file path to your sprite sheet image.</li> <li><code>cowX</code>, <code>cowY</code>: The position on the window where the sprite will be drawn.</li> <li><code>\"White\"</code>: The color tint to apply to the sprite (use <code>\"White\"</code> for no tint).</li> <li><code>frameWidth</code>, <code>frameHeight</code>: The width and height of each animation frame in the sprite sheet.</li> <li><code>5</code>: The number of frames in the animation cycle.</li> <li><code>scale: 10f</code>: The scale factor to resize the sprite (10 times larger in this case).</li> <li><code>framesPerCycle: 60</code>: The number of game frames it takes to complete one animation cycle.</li> </ul> <p>This function will automatically cycle through the frames in your sprite sheet, creating a smooth animation at the specified position and scale.</p>"},{"location":"drawing_your_first_shape.html","title":"Drawing your first shape","text":"<p>After making a window you probably want to start making basic shapes on screen. In this part of the documentation, you'll learn how to make rectangles, squares, and circles on your game window.</p> <p>This is the working example so far:</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nint Width = 20;\nint Height = 40;\n\nint rect_x = 500;\nint rect_y = 400;\n\nint sqr_x = 200;\nint sqr_y = 300;\nint sqr_size = 50;\n\nint radius = 20;\nint circle_x = 300;\nint circle_y = 300;\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n    Game.DrawCircle(circle_x, circle_y, radius, \"Yellow\");\n    Game.DrawRectangle(rect_x, rect_y, Width, Height, \"Red\");\n    Game.DrawSquare(sqr_x, sqr_y, sqr_size, \"Green\");\n});\n</code></pre> <p>The new bits of code are explained below:</p> <pre><code>int Width = 20;\nint Height = 40;\n\nint rect_x = 500;\nint rect_y = 400;\n\nint sqr_x = 200;\nint sqr_y = 300;\nint sqr_size = 50;\n\nint radius = 20;\nint circle_x = 300;\nint circle_y = 300;\n</code></pre> <p>This is just initializing variables for the shapes to be drawn on screen.</p> <pre><code>    Game.DrawCircle(circle_x, circle_y, radius, \"Yellow\");\n    Game.DrawRectangle(rect_x, rect_y, Width, Height, \"Red\");\n    Game.DrawSquare(sqr_x, sqr_y, sqr_size, \"Green\");\n});\n</code></pre> <ul> <li> <p><code>Game.DrawCircle(circle_x, circle_y, radius, \"Yellow\");</code>   Draws a circle on the screen. The arguments required are:</p> <ul> <li>The circle's X position</li> <li>The circle's Y position</li> <li>The circle's radius</li> <li>The circle's color</li> </ul> </li> <li> <p><code>Game.DrawRectangle(rect_x, rect_y, Width, Height, \"Red\");</code>   Draws a rectangle on the screen. The arguments required are:</p> <ul> <li>The rectangle's X position</li> <li>The rectangle's Y position</li> <li>The rectangle's width</li> <li>The rectangle's height</li> <li>The rectangle's color</li> </ul> </li> <li> <p><code>Game.DrawSquare(sqr_x, sqr_y, sqr_size, \"Green\");</code>   Draws a square on the screen. The arguments required are:</p> <ul> <li>The square's X position</li> <li>The square's Y position</li> <li>The square's size</li> <li>The square's color</li> </ul> </li> </ul> <p>In the next part of the manual you will be shown how to draw static and animated sprites in your window.</p>"},{"location":"drawing_your_first_sprite.html","title":"Drawing static sprites on your window","text":"<p>This is a new example without the shapes from last example, but  still usues the original as a base.</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nstring cowsprite = \"cow.png\";\nint cowX = 100;\nint cowY = 100;\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n    Game.DrawSprite(cowsprite, cowX, cowY, \"White\");\n});\n</code></pre> <p>The new bits of code are explained below as before.</p> <pre><code>Game.DrawSprite(cowsprite, cowX, cowY, \"White\");\n</code></pre> <p>This line draws a static sprite (not animated) on the window. Here\u2019s what each parameter means:</p> <ul> <li><code>cowsprite</code>: The file path to your sprite image.</li> <li><code>cowX</code>, <code>cowY</code>: The position on the window where the sprite will be drawn.</li> <li><code>\"White\"</code>: The color tint to apply to the sprite (use <code>\"White\"</code> for no tint).</li> </ul> <p>This function simply draws the image at the specified position with the given color tint, without any animation or scaling.</p>"},{"location":"drawing_your_first_text.html","title":"Drawing text to your window","text":"<p>This part of the documentation shows you how to draw text to your window.</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n    Game.DrawText(\"Hello, Asterisk Engine!\", 10, 10, \"White\");\n});\n</code></pre> <p>Let's break down the new code:</p> <pre><code>Game.DrawText(\"Hello, Asterisk Engine!\", 10, 10, \"White\");\n</code></pre> <p>This line draws text on the window. Here\u2019s what each parameter means:</p> <ul> <li><code>\"Hello, Asterisk Engine!\"</code>: The string of text to display.</li> <li><code>10</code>, <code>10</code>: The X and Y coordinates where the text will appear on the window.</li> <li><code>\"White\"</code>: The color of the text.</li> </ul> <p>This function renders the specified text at the given position with the chosen color.</p>"},{"location":"getting_started.html","title":"Getting Started with Asterisk Engine","text":""},{"location":"getting_started.html#installation","title":"Installation","text":"<p>To begin using Asterisk Engine, follow these steps:</p> <ol> <li>Clone the repository:     Open your terminal and run the following command to download the latest source code:</li> </ol> <pre><code>    git clone https://github.com/ametrine/asteriskengine.git\n</code></pre> <ol> <li>Navigate to the project directory:</li> </ol> <pre><code>    cd asteriskengine\n</code></pre> <ol> <li> <p>Install dependencies:     Make sure you have the required dependencies installed. Refer to the <code>README.md</code> or the official documentation for a list of prerequisites and installation commands for your operating system.</p> </li> <li> <p>Build or run the project:     Follow the instructions in the documentation to build or start the engine, depending on your development environment.</p> </li> </ol> <p>For more detailed setup instructions, configuration options, and troubleshooting tips, please refer to the official documentation.</p>"},{"location":"handling_keyboard_input.html","title":"Drawing your first shape","text":"<p>After making a window you probably want to start making basic shapes on screen. In this part of the documentation, you'll learn how to make rectangles, squares, and circles on your game window.</p> <p>This is the working example so far:</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nint x = 300;\nint y = 300;\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n    Game.DrawText(\"Hello, Asterisk Engine!\", x, y, \"White\");\n\n    Game.OnKeyDown(key =&gt;\n    {\n        if (key == KeyboardKey.Escape) Game.Close();\n        else if (key == KeyboardKey.F11) Game.ToggleFullscreen();\n        else if (key == KeyboardKey.Up) y -= 25;\n        else if (key == KeyboardKey.Down) y += 25;\n        else if (key == KeyboardKey.Left) x -= 25;\n        else if (key == KeyboardKey.Right) x += 25;\n    });\n});\n</code></pre> <p>The new bits of code are explained below:</p> <pre><code>Game.OnKeyDown(key =&gt;\n{\n    if (key == KeyboardKey.Escape) Game.Close();\n    else if (key == KeyboardKey.F11) Game.ToggleFullscreen();\n    else if (key == KeyboardKey.Up) y -= 25;\n    else if (key == KeyboardKey.Down) y += 25;\n    else if (key == KeyboardKey.Left) x -= 25;\n    else if (key == KeyboardKey.Right) x += 25;\n});\n</code></pre> <p>This listens for keyboard input and updates the position of the text accordingly. When an arrow key is pressed, the <code>x</code> or <code>y</code> variable is incremented or decremented, moving the text in the corresponding direction. Pressing <code>Escape</code> will close the window, and pressing <code>F11</code> will toggle fullscreen mode.</p> <ul> <li><code>KeyboardKey.Up</code>, <code>KeyboardKey.Down</code>, <code>KeyboardKey.Left</code>, and <code>KeyboardKey.Right</code> correspond to the arrow keys.</li> <li>The <code>Game.OnKeyDown</code> method registers a callback that runs every time a key is pressed.</li> <li>The <code>x</code> and <code>y</code> variables control the position of the text drawn by <code>Game.DrawText</code>.</li> </ul> <p>This approach allows you to handle keyboard input and move objects or trigger actions in your game loop.</p> <p>In the next part of the manual you will be shown how to draw static and animated sprites in your window.</p>"},{"location":"handling_mouse_input.html","title":"Drawing your first shape","text":"<p>After making a window you probably want to start making basic shapes on screen. In this part of the documentation, you'll learn how to make rectangles, squares, and circles on your game window.</p> <p>This is the working example so far:</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nint x = 300;\nint y = 300;\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n    Game.DrawText(\"Hello, Asterisk Engine!\", x, y, \"White\");\n\n    // Mouse input\n    Game.OnMouseDown(mouseButton =&gt;\n    {\n        if (mouseButton == MouseButton.Left)\n        {\n            // Move the text to the current mouse position\n            x = Game.MouseX();\n            y = Game.MouseY();\n        }\n    });\n});\n</code></pre> <p>The new bits of code are explained below:</p> <pre><code>Game.OnMouseDown(mouseButton =&gt;\n{\n    if (mouseButton == MouseButton.Left)\n    {\n        // Move the text to the current mouse position\n        x = Game.MouseX();\n        y = Game.MouseY();\n    }\n});\n</code></pre> <p>This listens for mouse input and updates the position of the text when the left mouse button is pressed. The <code>x</code> and <code>y</code> variables are set to the current mouse coordinates, so the text will jump to wherever you click in the window.</p> <ul> <li><code>MouseButton.Left</code> corresponds to the left mouse button.</li> <li>The <code>Game.OnMouseDown</code> method registers a callback that runs every time a mouse button is pressed.</li> <li><code>Game.MouseX()</code> and <code>Game.MouseY()</code> return the current mouse position.</li> </ul> <p>This approach allows you to handle mouse input and interactively move objects in your game window.</p> <p>In the next part of the manual you will be shown how to draw static and animated sprites in your window.</p>"},{"location":"license.html","title":"License","text":"<p>AsteriskEngine - Open Source Game Engine Based on raylib</p> <p>Copyright (c) 2025 Ametrine</p>"},{"location":"license.html#license_1","title":"License","text":"<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to use, copy, modify, and distribute the Software, subject to the following conditions:</p> <ol> <li> <p>Commercial Redistribution Restriction:     You may not sell, sublicense, or otherwise commercially redistribute the Software, in whole or in part, without prior written permission from the copyright holder.</p> </li> <li> <p>Permitted Uses:     You may use, copy, modify, and distribute the Software for personal, educational, or non-commercial purposes.</p> </li> <li> <p>Attribution:     You must include this license and copyright notice in all copies or substantial portions of the Software.</p> </li> </ol> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p>Note: AsteriskEngine is based on raylib, which is licensed under the zlib/libpng license. Please review raylib's license for additional terms and conditions.</p>"},{"location":"playing_audio.html","title":"Playing and Stopping audio","text":"<p>This will show you how you can load, start and stop audio in Asterisk Engine.</p> <pre><code>using System.Threading;\nusing AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nstring soundfile = \"Double_Shuffle.mp3\";\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n\n    Game.LoadAudio(soundfile);\n    Game.PlayAudio();\n    Thread.Sleep(10000); // Play for 10 seconds\n    Game.StopAudio();\n    Game.UnloadAudio();\n    Game.Close();\n});\n</code></pre> <p>This example demonstrates how to load, play, and stop audio using the Asterisk Engine in a simple C# application. The code initializes a game window, loads an audio file (\"Double_Shuffle.mp3\"), and plays it for 10 seconds. After playback, the audio is stopped and unloaded, and the game window is closed.     Key steps include: - Setting up the window dimensions and title.</p> <ul> <li> <p>Loading the audio file with <code>Game.LoadAudio</code>.</p> </li> <li> <p>Playing the audio with <code>Game.PlayAudio</code>.</p> </li> <li> <p>Pausing the execution for 10 seconds to allow the audio to play.</p> </li> <li> <p>Stopping and unloading the audio with <code>Game.StopAudio</code> and <code>Game.UnloadAudio</code>.</p> </li> <li> <p>Closing the game window with <code>Game.Close</code>.</p> </li> </ul> <p>This example is useful for understanding basic audio management in the Asterisk Engine.</p>"},{"location":"window_settings.html","title":"Window Settings","text":"<p>This is showing the different window settings for your game when using Asterisk Engine.</p> <pre><code>using AsteriskEngine;\nusing Raylib_cs;\n\nint WindowWidth = 600;\nint WindowHeight = 600;\n\nGame.Window(\"Test Game\", WindowWidth, WindowHeight, () =&gt;\n{\n    Game.ClearBackground(\"Black\");\n    Game.Set_FPS(60);\n\n    Game.DrawFPS(WindowWidth - 100, 10, \"White\");\n\n    Game.ToggleFullscreen();\n    Game.Enable_ExitKey(false);\n\n    Game.Close();\n});\n</code></pre> <p>This example demonstrates how to configure window settings in a game using Asterisk Engine with Raylib_cs.</p> <ul> <li> <p>Sets the window title to \"Test Game\" and dimensions to 600x600 pixels.</p> </li> <li> <p>Clears the background to black each frame.</p> </li> <li> <p>Sets the target frames per second (FPS) to 60.</p> </li> <li> <p>Draws the current FPS in white at the top-right corner of the window.</p> </li> <li> <p>Toggles fullscreen mode.</p> </li> <li> <p>Disables the default exit key to prevent accidental closure.</p> </li> <li> <p>Closes the game window when the main loop ends.</p> </li> </ul>"}]}